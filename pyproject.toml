[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "xiaohongshu-auto-publisher"
version = "1.0.0"
description = "小红书自动发布工具"
readme = "README.md"
requires-python = ">=3.8"
license = { text = "MIT" }
authors = [{ name = "Shikun Shi", email = "shang.shi.kun@163.com" }]
maintainers = [{ name = "Shikun Shi", email = "shang.shi.kun@163.com" }]
keywords = ["xiaohongshu", "automation", "publisher", "social-media"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "aiofiles==23.2.1",
    "aiohappyeyeballs==2.4.4",
    "aiohttp==3.10.11",
    "aiosignal==1.3.1",
    "annotated-types==0.7.0",
    "anyio==4.5.2",
    "apscheduler==3.10.4",
    "async-timeout==5.0.1",
    "asyncio-throttle==1.0.2",
    "attrs==25.3.0",
    "backports-zoneinfo==0.2.1",
    "certifi==2025.8.3",
    "cffi==1.17.1",
    "charset-normalizer==3.4.3",
    "click==8.1.7",
    "colorama==0.4.6",
    "cryptography==45.0.7",
    "dashscope==1.24.2",
    "distro==1.9.0",
    "exceptiongroup==1.3.0",
    "fake-useragent==1.4.0",
    "frozenlist==1.5.0",
    "greenlet==3.0.1",
    "h11==0.16.0",
    "httpcore==1.0.9",
    "httpx==0.28.1",
    "idna==3.10",
    "importlib-resources==6.4.5",
    "jiter==0.9.1",
    "loguru==0.7.2",
    "multidict==6.1.0",
    "openai==1.105.0",
    "pillow==10.1.0",
    "playwright==1.40.0",
    "propcache==0.2.0",
    "pycparser==2.22",
    "pydantic==2.5.2",
    "pydantic-core==2.14.5",
    "pyee==11.0.1",
    "python-dotenv==1.0.0",
    "pytz==2025.2",
    "pyyaml==6.0.1",
    "requests==2.31.0",
    "setuptools==41.2.0",
    "six==1.17.0",
    "sniffio==1.3.1",
    "tenacity==8.2.3",
    "tqdm==4.67.1",
    "typing-extensions==4.13.2",
    "tzdata==2025.2",
    "tzlocal==5.2",
    "urllib3==2.2.3",
    "uv==0.8.15",
    "websocket-client==1.8.0",
    "win32-setctime==1.2.0",
    "yarl==1.15.2",
    "zipp==3.20.2",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "ruff>=0.1.0",
]
test = ["pytest>=7.0.0", "pytest-asyncio>=0.21.0", "pytest-cov>=4.0.0"]

[project.urls]
Homepage = "https://github.com/yourusername/xiaohongshu-auto-publisher"
Repository = "https://github.com/yourusername/xiaohongshu-auto-publisher"
Documentation = "https://github.com/yourusername/xiaohongshu-auto-publisher#readme"
"Bug Tracker" = "https://github.com/yourusername/xiaohongshu-auto-publisher/issues"

[project.scripts]
xiaohongshu-publisher = "src.main:cli"

[tool.setuptools.packages.find]
where = ["."]
include = ["src*"]
exclude = ["tests*"]

[tool.setuptools.package-data]
src = ["*.yml", "*.yaml", "*.json"]


[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["src"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
asyncio_mode = "auto"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]

[tool.coverage.run]
source = ["src"]
omit = ["tests/*", "*/tests/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]
show_missing = true
precision = 2

[[tool.mypy.overrides]]
module = [
    "playwright.*",
    "apscheduler.*",
    "asyncio_throttle.*",
    "fake_useragent.*",
]
ignore_missing_imports = true


[tool.ruff]
line-length = 88
target-version = "py39"

[tool.ruff.format]
# 与 black 行为完全一致
quote-style = "double"
indent-style = "space"